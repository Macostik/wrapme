//
//  WrapListViewController.swift
//  meWrap
//
//  Created by Yura Granchenko on 25/02/16.
//  Copyright Â© 2016 Ravenpod. All rights reserved.
//

import Foundation

class WrapListViewController: BaseViewController {
    
    var sharePath: String? = nil
    
    @IBOutlet var wrapListDataSource: PaginatedStreamDataSource!
    @IBOutlet weak var streamView: StreamView!
    @IBOutlet weak var searchField: TextField!
    
    private lazy var wraps = Wrap.fetch().sort("updatedAt").execute() as? [Wrap]
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        wrapListDataSource.placeholderMetrics = StreamMetrics(loader: PlaceholderView.searchPlaceholderLoader())
        wrapListDataSource.items = PaginatedList(entries:wraps ?? [], request:PaginatedRequest.wraps(nil))
        wrapListDataSource.autogeneratedMetrics.hiddenAt = { [weak self] item in
            let wrap = item.entry as! Wrap
            if let text = self?.searchField?.text where !text.isEmpty {
                return wrap.name?.rangeOfString(text, options: .CaseInsensitiveSearch, range: nil, locale: nil) == nil
            } else {
                return false
            }
            
        }
        wrapListDataSource.autogeneratedMetrics.change {
            $0.selection = { [weak self] item, entry in
                self?.shareContent(entry as! Wrap)
            }
        }
    }
    
    @IBAction func cancel(sender: AnyObject) {
        self.navigationController?.popViewControllerAnimated(false)
    }
    
    //MARK: UITextFiealDelegate
    
    @IBAction func searchTextChanged(sender: UITextField) {
        streamView.reload()
    }
    
    func shareContent(wrap: Wrap) {
        guard let sharePath = sharePath else { return }
        let manager = NSFileManager.defaultManager()
        if manager.fileExistsAtPath(sharePath) {
            guard let data = manager.contentsAtPath(sharePath) else { return }
            if sharePath.hasSuffix("text") {
                guard let text = String(data: data, encoding: NSUTF8StringEncoding) else { return }
                let message = Message.entry()
                message.wrap = wrap
                guard let wrapViewController = message.viewController() as? WrapViewController else { return }
                wrapViewController.presentedText = text
                wrapViewController.showKeyboard = true
                self.navigationController?.pushViewController(wrapViewController, animated: false)
            } else {
                guard let image = UIImage(data: data) else { return}
                Storyboard.UploadSummary.instantiate({
                    let asset = MutableAsset()
                    asset.setImage(image)
                    $0.assets = [asset]
                    $0.delegate = self
                    $0.wrap = wrap
                    self.navigationController?.pushViewController($0, animated: false)
                })
            }
        }
    }
}

extension WrapListViewController: UploadSummaryViewControllerDelegate {
    
    func uploadSummaryViewController(controller: UploadSummaryViewController, didDeselectAsset asset: MutableAsset) {
    }
    
    func uploadSummaryViewController(controller: UploadSummaryViewController, didFinishWithAssets assets: [MutableAsset]) {
        self.navigationController?.popToRootViewControllerAnimated(false)
        SoundPlayer.player.play(.s04)
        controller.wrap?.uploadAssets(assets)
    }
}

