//
//  WrapListViewController.swift
//  meWrap
//
//  Created by Yura Granchenko on 25/02/16.
//  Copyright Â© 2016 Ravenpod. All rights reserved.
//

import Foundation

class WrapListViewController: WLBaseViewController {
    
    @IBOutlet var wrapListDataSource: PaginatedStreamDataSource!
    @IBOutlet weak var streamView: StreamView!
    @IBOutlet weak var searchField: TextField!
    
    private lazy var wraps = Wrap.fetch().sort("updatedAt").execute() as? [Wrap]
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        wrapListDataSource.placeholderMetrics = StreamMetrics(loader: PlaceholderView.searchPlaceholderLoader())
        wrapListDataSource.items = PaginatedList(entries:wraps ?? [], request:PaginatedRequest.wraps(nil))
        wrapListDataSource.autogeneratedMetrics.hiddenAt = { [weak self] item in
            let wrap = item.entry as! Wrap
            if let text = self?.searchField?.text where !text.isEmpty {
                return wrap.name?.rangeOfString(text, options: .CaseInsensitiveSearch, range: nil, locale: nil) == nil
            } else {
                return false
            }
            
        }
        wrapListDataSource.autogeneratedMetrics.change {
            $0.selection = { item, entry in
                
            }
        }
    }
    
    @IBAction func cancel(sender: AnyObject) {
        self.dismissViewControllerAnimated(false, completion: nil)
    }
    
    //MARK: UITextFiealDelegate
    
    @IBAction func searchTextChanged(sender: UITextField) {
        streamView.reload()
    }
}

